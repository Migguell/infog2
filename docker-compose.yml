version: '3.8'

services:
  db:
    container_name: infog2_db_srvr
    image: postgres:16-alpine
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    environment: # Importação direta das variáveis de ambiente para o container do DB
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_HOST_PORT}:${POSTGRES_CONTAINER_PORT}"
    networks:
      - infog2_net
    volumes:
      - pg_data:/var/lib/postgresql/data:Z

  api:
    container_name: infog2_api_srvr
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000"
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    networks:
      - infog2_net
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s
    volumes:
      - .:/app:Z
    environment:
      - PYTHONUNBUFFERED=1

networks:
  infog2_net:
    driver: bridge

volumes:
  pg_data:
